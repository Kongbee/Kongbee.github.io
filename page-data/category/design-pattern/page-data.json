{"componentChunkName":"component---src-templates-category-template-category-template-tsx","path":"/category/design-pattern","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/DesignPattern/strategy/","categorySlug":"/category/design-pattern/"},"frontmatter":{"description":"객체의 행위를 바꾸고 싶은 경우 직접 수정하지 않고 전략이라고 부르는 캡슐화한 알고리즘을 컨텍스트 안에서 바꿔주면서 상호 교체가 가능하게 만드는 패턴","category":"Design Pattern","title":"Strategy 패턴","date":"2022-12-14T11:13:08.000Z","slug":null}}},{"node":{"fields":{"slug":"/posts/DesignPattern/factory/","categorySlug":"/category/design-pattern/"},"frontmatter":{"description":"객체를 사용하는 코드에서 객체 생성 부분을 떼어내 추상화한 패턴","category":"Design Pattern","title":"Factory 패턴","date":"2022-12-14T10:13:10.000Z","slug":null}}},{"node":{"fields":{"slug":"/posts/DesignPattern/singleton/","categorySlug":"/category/design-pattern/"},"frontmatter":{"description":"하나의 클래스에 오직 하나의 인스턴스만 가지는 패턴입니다.","category":"Design Pattern","title":"Singleton 패턴","date":"2022-12-14T10:13:04.000Z","slug":null}}}]}},"pageContext":{"group":"Design Pattern","limit":4,"offset":0,"pagination":{"currentPage":0,"prevPagePath":"/category/design-pattern","nextPagePath":"/category/design-pattern/page/1","hasNextPage":false,"hasPrevPage":false}}},"staticQueryHashes":["251939775","2764776372","401334301","63107425"]}